% Очистка экрана и локальных переменных
clear;
clc;

% Интервал [старт:шаг:конец] включительно.
interval = -4:0.001:4;

% Исходная функция: arccos(0.25*x); 
% Область определения арккосинуса: [-1;1]
% Область определения нашей функции: [-4;4]
% Область значения арккосинуса: pi -> 0
% Получается синус сжатый по oX, затухающий по oY
% из-за изменения арккосинуса к нулю.

% Объявляем анонимную функцию для вычисления узловых значений
func = @(x) acos(x/4) .* sin(x*(pi/2)); 


% 5 узловых точек равностоящих (h):
% x: -3 -2 -1 0 1           ФУНКЦИЯ НЕ ПОЗВОЛЯЕТ РАЗБИТЬ ОТРЕЗОК НА ДРУГИЕ КАЧЕСТВЕННЫЕ 5 точек
% в другом случае мы скачем по нулям, или не даём адекватных узлов. 
% поэтому для 5ти точек наша область значений: [-3;1] 
h1 = -3:1:1;
f1 = func(h1);

% это точки по всей области с шагом 0.01 интерполяции по ним и график строим
% т.е находим ~700 точек и значений функций в точках с помощью полиномов
points_D5 = -4:0.01:2;

L_5 = lagrange(h1, f1, points_D5);

N_5 = newton(h1, f1, points_D5);

% максимальное значение 6-ой производной ~= 40;
w_5 = 1;
% в точке x=3 наибольшее значение исходной функции => максимум от wn 
for i=1:5
  w_5 *= (3 - h1(i));  
end

% случилось так, что w_5 == factorial(6);
% Теоретическая ОШИБКА
theor_error =  w_5 * 40/factorial(6)
error_lagrange_5 = abs(func(0.75) - lagrange(h1, f1, 0.75))



% ----------------------------------- Графики для 5 точек -------------------

% Окна для вывода
fig1 = figure('Name', 'Poly_5', 'Color','w')
fig2 = figure('Name', 'Poly_12', 'Color','w')

% Выбираем для вывода окно 1
figure(fig1);


% вывод графика func(x)
x_plot = -4:0.01:4;
y_plot = func(x_plot);

% Вывод исходного графика с шагом 0.01 [-4;4]
plot(x_plot, y_plot, 'LineWidth', 1);
% Включаем наложение графиков
hold on

% вывод графика полинома 5 степени по ~600 точкам
% По интерполированным yy. С параметрами красного цвета 'r'
% и установленной ширины 1
% покажем ошибку, которая возникает при удалении от [-3;1] на графике
plot(points_D5, N_5, 'r', 'LineWidth', 2)
plot(points_D5, L_5, 'g', 'LineWidth', 1) % идентичные полиномы


%yline(0) Функции yline почему-то нет в octave
% поэтому строим ось оХ вручную
y_zero = zeros(1, length(x_plot));
plot(x_plot, y_zero, '--')

% Легенда (даём графикам имена)
legend('arccos(x/4)*cos(x*pi/2)','{\itL_5}', '{\itN_5}','oX')

% закончили рисовать для 5 точек, выключаем наложение
hold off

% ----------------------------------- Графики для 5 точек -------------------




% ----------------------------------- Полином из 12 точек -------------------

% 12 узловых точек равностоящих (h):
% x: -4 -3.2727 -2.5455 -1.8182 -1.0909 -0.3636 0.3636 1.0909 1.8182 2.5455 3.2727 4
h2 = -4:8/11:4;
f2 = func(h2);

points_D12 = -4:0.01:4;

L_12 = lagrange(h2, f2, points_D12);

N_12 = newton(h2, f2, points_D12);



% максимальное значение производной - б.м число => 0
% Теоретическая ОШИБКА
theor_error =  w_12 * 0/factorial(12)
error_lagrange_12 = abs(func(0.75) - lagrange(h2, f2, 0.75))


% ----------------------------------- Полином из 12 точек -------------------






% ----------------------------------- Графики для 12 точек -------------------

% Выбираем для вывода окно 2
figure(fig2);

% вывод графика func(x)
x_plot = -4:0.01:4;
y_plot = func(x_plot);

% Вывод исходного графика с шагом 0.01 [-4;4]
plot(x_plot, y_plot, 'LineWidth', 1);
% Включаем наложение графиков
hold on

% вывод графика полинома 5 степени по ~600 точкам
% По интерполированным yy. С параметрами красного цвета 'r'
% и установленной ширины 1
% покажем ошибку, которая возникает при удалении от [-3;1] на графике
plot(points_D12, N_12, 'r', 'LineWidth', 2)
plot(points_D12, L_12, 'g', 'LineWidth', 1) % идентичные полиномы


%yline(0) Функции yline почему-то нет в octave
% поэтому строим ось оХ вручную
y_zero = zeros(1, length(x_plot));
plot(x_plot, y_zero, '--')

% закончили рисовать для 5 точек, выключаем наложение
hold off

% Легенда (даём графикам имена)
legend('arccos(x/4)*cos(x*pi/2)','{\itL_12}', '{\itN_12}','oX')

% ----------------------------------- Графики для 12 точек -------------------




